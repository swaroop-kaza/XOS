load(7,1);
load(8,2);
load(23,17);
load(24,18);
load(9,3);
load(10,4);
load(11,5);
load(12,6);  ////INT1
load(13,7);
load(14,8);  ///INT2
load(15,9);
load(16,10); ///INT3
load(17,11);
load(18,12); ////INT4

load(19,13);  ///INT5
load(20,14);
load(21,15); ///INT6
load(22,16);
load(23,17); ////INT7
load(24,18);

load(5,19); //FAT ENTRY
load(6,20); //DISK FREE LIST


alias i S1;
i = 448;
while(i<512) do
	[3072+i] = 0;
	i = i+1;
endwhile;

i=0;
while (i<=25) do
	[1280+i] = 1;
	i = i+1;
endwhile;       //////MEM_LIST

[1280 + 63] = 1;

while (i<63) do
	[1280+i] = 0;
	i = i+1;
endwhile;

i = 0;

while (i<32) do
	[READY_LIST + 32*i + 1] = 0;
	i = i+1;
endwhile;                           ///CLEARING PCB states

i = 448;

while(i<=511) do
	[3072 + i] = 0;
	i = i+1;	
endwhile;							/////SWAP AREA

[READY_LIST + 0] = 0;


alias counter S4;
PTBR = 32256;
PTLR = 5;

counter =  0;
i = 0;
while(counter<32) do
	[32256 + i] = -1;
	[32256 + i+1] = "00";
	counter = counter+1;
	i = i+2;
endwhile;


[PTBR + 0] = 21; // Physical Page Number for Logical Page 0
[PTBR + 1] = "00"; // Auxiliary Information for Logical Page 0

[PTBR + 2] = 22; // Physical Page Number for Logical Page 1
[PTBR + 3] = "00"; // Auxiliary Information for Logical Page 1

[PTBR + 4] = 23; // Physical Page Number for Logical Page 2
[PTBR + 5] = "00"; // Auxiliary Information for Logical Page 2

[PTBR + 6] = 24; // Physical Page Number for Logical Page 3
[PTBR + 7] = "00"; // Auxiliary Information for Logical Page 3

[PTBR + 8] = 25;
[PTBR + 9] = "01";



[READY_LIST + 1] = 2; // Sets the entry for STATE as Running

SP = 4 * 512;
[25 * 512] = 0; // Set up the IP value for INIT in the stack

alias currentPCB S2;
currentPCB = READY_LIST + 32 * ((PTBR - 32256) / 10);

counter = 0;
while ( counter < 8) do
	[currentPCB + 15 + counter*2 ] = -1;
	counter = counter +1;
endwhile;                                           ////Per process Open File Table Entries
[currentPCB + 31] = 0;   							///PARENT PID
 

counter = 0;
while (counter < 64) do
	[FILE_TABLE + counter*2] = -1;
	counter = counter +1;
endwhile;											////SYSTEM WIDE OPEN FILE TABLE Entries
ireturn;